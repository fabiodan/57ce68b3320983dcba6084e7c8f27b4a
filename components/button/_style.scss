/* Button */

// Dependencies
@import "../typography/mixins";

// Variables
$button-height: 44px;
$button-horizontal-padding: 16px;
$button-border-radius: 4px;
$button-border-width: 1px;
$button-hover-border-width: 2px;

// TODO: move colors to Theme module
$black: #000000;
$white: #FFFFFF;
$green: #68A51C;
$blue: #0073B1;
$red: #D43030;

// Block
.button {
  @include typography(button);
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  height: $button-height;
  padding: 0 $button-horizontal-padding;
  background-color: transparent;
  color: $green;
  border: none;
  border-radius: $button-border-radius;
  text-align: center;
  user-select: none;
  -webkit-appearance: none;
  overflow: hidden;
  vertical-align: middle;
  cursor: pointer;
  outline: none;

  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }

  &::before,
  &::after {
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    opacity: 0;
    pointer-events: none;
    content: "";
    background-color: $black;
    z-index: 0;
  }

  &::before {
    z-index: 1;
    transition: opacity 15ms linear;
  }

  // ::before handles hover/focus state
  &:hover::before,
  &:focus::before {
    transition-duration: 75ms;
    opacity: 0.12;
  }

  &::after {
    transition: opacity 150ms linear;
  }

  // ::after handles active state
  &.button--active:not(.button--disabled),
  &:active:not(.button--disabled)::after {
    transition-duration: 75ms;
    opacity: 0.16;
  }
}

// Elements
.button__content {
  position: relative;
  z-index: 3;
}

.button__spinner {
  margin-right: 8px;
  line-height: inherit;
  vertical-align: sub;
}

// Modifiers
.button--primary {
  background-color: $green;
  color: #FFFFFF;

  &::after {
    transition: opacity 150ms linear;
  }

  &:focus,
  &:hover:not(.button--disabled) {
    box-shadow: 0 2px 10px 0 rgba($black, 0.20);
  }

  .button__spinner ::before {
    background-color: $white;
  }
}

.button--fluid {
  width: 100%;
}

.button--blue {
  background-color: $blue;
}

.button--red {
  background-color: $red;
}

.button--green {
  background-color: $green;
}

.button--disabled,
.button:disabled {
  pointer-events: none;
  cursor: default;
  &::before {
    background-color: $white;
    opacity: 0.5;
  }
  .button__content {
    z-index: 0;
  }
}

.button--secondary {
  background-color: transparent;
  color: $green;
  border: solid $button-border-width $green;
  padding: 0 ($button-horizontal-padding - $button-border-width);
  height: $button-height;
  line-height: rem($button-height - ($button-border-width * 2));

  .button__spinner ::before {
    background-color: $green;
  }

  &.button--blue {
    color: $blue;
    border-color: $blue;
    &::before,
    &::after {
      background-color: $blue;
    }
    &.button--disabled,
    &:disabled {
      border-color: rgba($blue, 0.5);
    }
    .button__spinner ::before {
      background-color: $blue;
    }
  }

  &.button--red {
    color: $red;
    border-color: $red;
    &::before,
    &::after {
      background-color: $red;
    }
    &.button--disabled,
    &:disabled {
      border-color: rgba($red, 0.5);
    }
    .button__spinner ::before {
      background-color: $red;
    }
  }

  &.button--green {
    color: $green;
    border-color: $green;
    &::before,
    &::after {
      background-color: $green;
    }
    &.button--disabled,
    &:disabled {
      border-color: rgba($green, 0.5);
    }
    .button__spinner ::before {
      background-color: $green;
    }
  }

  &.button--disabled,
  &:disabled {
    border-color: rgba($green, 0.5);

    &::before {
      background-color: $white;
      opacity: 0.5;
    }
  }

  &:focus,
  &:hover {
    border-width: $button-hover-border-width;
    padding: 0 ($button-horizontal-padding - $button-hover-border-width);
    line-height: rem($button-height - ($button-hover-border-width * 2));
  }
}
